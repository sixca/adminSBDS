<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kbstar.mapper.MateMapper">
    <select id="getTOP10List" parameterType="Integer" resultType="mate">
        <![CDATA[
        SELECT *
        FROM (
                 SELECT
                     m.name,
                     COALESCE(SUM(mt.price), 0) AS total_price,
                     COUNT(*) AS match_cnt,
                     ROUND(MAX(rv.avg_rate), 1) AS avg_rate -- 평균값을 소수점 첫째 자리까지 반올림
                 FROM
                     mate m
                         LEFT JOIN match mt ON m.id = mt.mate_id
                         LEFT JOIN (
                         SELECT
                             mate_id,
                             ROUND(AVG(r.rate), 1) AS avg_rate -- 평균값을 소수점 첫째 자리까지 반올림
                         FROM
                             mate_review r
                         GROUP BY
                             mate_id
                     ) rv ON m.id = rv.mate_id
                 WHERE
                     mt.status NOT IN ('환불완료', '매칭취소')
                 GROUP BY
                     m.name
                 HAVING
                     MAX(rv.avg_rate) IS NOT NULL AND COALESCE(SUM(mt.price), 0) <> 0
                 ORDER BY
                     avg_rate DESC
             )
        WHERE
            ROWNUM <= 10
        ]]>
    </select>
    <select id="getMatchedMemberImgAll" parameterType="String" resultType="mate">
        <![CDATA[
        SELECT mt.NAME AS name, mb.NAME AS member_name, mb.img as member_img
        FROM MATCH mtc
                 JOIN MEMBER mb ON mtc.MEMBER_ID = MB.ID
                 JOIN MATE mt ON MTC.MATE_ID = MT.ID
        ]]>
    </select>
    <select id="getfindpage" resultType="mate" parameterType="mate">
        SELECT *
        FROM mate
        <where>
            <if test="search1 != null and !search1.equals('')">
                AND name LIKE '%' ||  #{search1} || '%'
            </if>
            <if test="search2 != null and !search2.equals('')">
                AND license LIKE '%' ||  #{search2} || '%'
            </if>
            <if test="search3 != null and !search3.equals('')">
                AND area LIKE '%' ||  #{search3} || '%'
            </if>
            <if test="startPeriod != null and !startPeriod.equals('')">
                AND job_period &gt;= #{startPeriod}
            </if>
            <if test="endPeriod != null and !endPeriod.equals('')">
                AND job_period &lt;= #{endPeriod}
            </if>
        </where>
            ORDER BY job_period DESC
    </select>

    <select id="select" parameterType="Integer" resultType="mate">
        SELECT * FROM mate WHERE id=#{id}
    </select>
    <select id="selectall" resultType="mate">
        SELECT *
        FROM mate
        ORDER BY id DESC
    </select>
    <insert id="insert" parameterType="mate">
        INSERT INTO mate (id, email, name, password, area, job_period, license, img, valid)
        VALUES (mate_seq.NEXTVAL, #{email}, #{name}, #{password}, #{area}, #{jobPeriod}, #{license}, #{img},
        UPPER(#{valid}))
    </insert>
    <update id="update" parameterType="mate">
        UPDATE mate SET email=#{email},name=#{name}, area=#{area}, job_period=#{jobPeriod}, license=#{license},
        img=#{img}, valid=#{valid} WHERE id=#{id}
    </update>
    <delete id="delete" parameterType="Integer">
        DELETE FROM mate WHERE id=#{id}
    </delete>
</mapper>