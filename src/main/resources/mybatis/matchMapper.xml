<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kbstar.mapper.MatchMapper">
    <select id="getCntToMatched" resultType="java.lang.Integer">
        SELECT COUNT(*) AS CNT
        FROM MATCH
        WHERE STATUS IN ('매칭완료', '결제완료', '정산완료', '결제대기')
    </select>
    <select id="getCntWaiting" resultType="java.lang.Integer">
        SELECT COUNT(*) AS CNT
        FROM MATCH
        WHERE STATUS IN ('매칭대기')
    </select>
    <select id="getTotalPrice" resultType="java.lang.Integer">
        SELECT SUM(PRICE) AS total_price
        FROM MATCH
        WHERE STATUS IN ('결제완료', '정산완료')
    </select>
    <select id="getCancelledCnt" resultType="java.lang.Integer">
        SELECT COUNT(*) AS cnt
        FROM MATCH
        WHERE STATUS IN ('매칭취소', '환불완료')
    </select>
    <select id="getConfirmPercent" resultType="java.lang.Integer">
        SELECT (ROUND(COUNT(CASE WHEN STATUS = '매칭완료' THEN 1 END) / COUNT(*), 2)
            + ROUND(COUNT(CASE WHEN STATUS = '결제완료' THEN 1 END) / COUNT(*), 2)
            + ROUND(COUNT(CASE WHEN STATUS = '정산완료' THEN 1 END) / COUNT(*), 2)) * 100 AS confirm_percentage
        FROM MATCH
    </select>
    <select id="getPayDoneCnt" resultType="java.lang.Integer">
        SELECT COUNT(*) AS cnt
        FROM MATCH
        WHERE pay_date IS NOT NULL
    </select>
    <select id="select" parameterType="Integer" resultType="Match">
        SELECT * FROM match WHERE id=#{id}
    </select>

    <select id="selectall" resultType="match">
        SELECT m.ID,
               mem.NAME AS member_name,
               mat.NAME AS mate_name,
               m.START_DATE,
               m.END_DATE,
               m.SERVICE,
               m.AREA,
               m.OBJECT_GENDER,
               m.OBJECT_BIRTH,
               m.STATUS,
               m.PRICE,
               m.PAYMENT,
               m.PAY_DATE
        FROM MATCH m
                 INNER JOIN MEMBER mem ON m.MEMBER_ID = mem.ID
                 INNER JOIN MATE mat ON m.MATE_ID = mat.ID
    </select>

    <select id="getfindpage" resultType="match" parameterType="match">
        SELECT
        m.ID,
        mem.NAME AS member_name,
        mat.NAME AS mate_name,
        m.START_DATE,
        m.END_DATE,
        m.SERVICE,
        m.AREA,
        m.OBJECT_GENDER,
        m.OBJECT_BIRTH,
        m.STATUS,
        m.PRICE,
        m.PAYMENT,
        m.PAY_DATE
        FROM
        MATCH m
        INNER JOIN MEMBER mem ON m.MEMBER_ID = mem.ID
        INNER JOIN MATE mat ON m.MATE_ID = mat.ID
        <where>
            <if test="search1 != null and !search1.equals('')">
                AND m.OBJECT_GENDER LIKE '%' || #{search1} || '%'
            </if>
            <if test="search2 != null and !search2.equals('')">
                AND m.STATUS LIKE '%' || #{search2} || '%'
            </if>
            <if test="startDateTo != null and !startDateTo.equals('')">
                AND m.START_DATE &gt;= TO_DATE(#{startDateTo}, 'YYYY-MM-DD')
            </if>
            <if test="startDateFrom != null and !startDateFrom.equals('')">
                AND m.END_DATE &lt;= TO_DATE(#{startDateFrom}, 'YYYY-MM-DD')+0.9999
            </if>
        </where>
        ORDER BY m.ID DESC
    </select>


    <insert id="insert" parameterType="match">
        INSERT INTO match (id, member_id, num, amount, adm_comment) VALUES (match_seq.NEXTVAL, #{memberId}, #{num},
        #{amount}, #{admComment})
    </insert>
    <update id="updateStatus">
        UPDATE match
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <update id="update" parameterType="match">
        UPDATE match SET member_id=#{memberId}, num=#{num}, amount=#{amount}, adm_comment=#{admComment} WHERE id=#{id}
    </update>
    <delete id="delete" parameterType="Integer">
        DELETE FROM match WHERE id=#{id}
    </delete>
</mapper>